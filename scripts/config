#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading current settings..." --weight=1

# Load current mode
current_mode=$(ynh_app_setting_get --app=$app --key=mode)
current_phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# BACKUP BEFORE MODIFICATIONS
#=================================================
ynh_script_progression --message="Creating backup before modifications..." --weight=1

# Backup the app
ynh_backup_create --include_backup=1 --include_app_dir=1

#=================================================
# ASK FOR NEW MODE
#=================================================
ynh_script_progression --message="Configuring new mode..." --weight=2

# Ask for new mode
echo "Current mode: $current_mode"
echo "Available modes:"
echo "1) classic - Standard static files + PHP"
echo "2) cms - Front controller for WordPress/Drupal (index.php in /www/)"
echo "3) cms-public - Front controller for Laravel/Symfony (index.php in /www/public/)"
echo ""
read -p "Enter new mode (classic/cms/cms-public): " new_mode

# Validate input
if [[ ! "$new_mode" =~ ^(classic|cms|cms-public)$ ]]; then
    ynh_die --message="Invalid mode. Please choose: classic, cms, or cms-public"
fi

#=================================================
# UPDATE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Updating Nginx configuration..." --weight=3

nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"

# Remove old mode-specific configurations
rm -f "$nginx_extra_conf_dir/cms.conf"
rm -f "$nginx_extra_conf_dir/cms-public.conf"
rm -f "$nginx_extra_conf_dir/php.conf"

# Add new mode-specific configuration
if [ "$new_mode" = "cms" ]
then
    # CMS mode: Add front controller pattern on top of base config
    ynh_add_config --template="nginx-cms.conf" --destination="$nginx_extra_conf_dir/cms.conf"
    
elif [ "$new_mode" = "cms-public" ]
then
    # CMS-Public mode: Add front controller pattern pointing to /public folder
    ynh_add_config --template="nginx-cms-public.conf" --destination="$nginx_extra_conf_dir/cms-public.conf"
    
    # Create public folder if it doesn't exist
    if [ ! -d "$install_dir/www/public" ]; then
        mkdir -p "$install_dir/www/public"
        # Create a basic index.php in public folder
        echo "<?php
// Front controller for CMS-Public mode
// This file will be replaced by your actual CMS index.php
echo 'CMS-Public mode is ready. Please upload your CMS files.';
?>" > "$install_dir/www/public/index.php"
    fi
    
else
    # Classic mode: Standard PHP configuration
    if [ "$current_phpversion" != "none" ]
    then
        ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
    fi
fi

#=================================================
# UPDATE APP SETTINGS
#=================================================
ynh_script_progression --message="Updating application settings..." --weight=1

# Store new mode
ynh_app_setting_set --app=$app --key=mode --value=$new_mode

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading Nginx configuration..." --weight=1

# Reload Nginx to apply new configuration
systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Mode change completed successfully" --last

echo "Mode changed from '$current_mode' to '$new_mode'"
echo "Nginx configuration has been updated and reloaded"
