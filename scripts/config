#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
domain=$(ynh_app_setting_get --app=$app --key=domain)
path=$(ynh_app_setting_get --app=$app --key=path)

#=================================================
# SPECIFIC GETTERS FOR TOML SHORT KEY
#=================================================

#=================================================
# SPECIFIC VALIDATORS FOR TOML SHORT KEYS
#=================================================

#=================================================
# SPECIFIC SETTERS FOR TOML SHORT KEYS
#=================================================

set__password() {
    if [ ! "$password" == "" ]
    then
        ynh_app_setting_set --app=$app --key=password --value="$password"
    fi
}

#=================================================
# GENERIC FINALIZATION
#=================================================

ynh_app_config_validate() {
    _ynh_app_config_validate

    # Validation du mot de passe SFTP
    # Si SFTP est activé mais pas de mot de passe, on utilisera le mot de passe de l'utilisateur courant
    if [ "${changed[with_sftp]}" == "true" ] && [ $with_sftp -eq 1 ] && [ "$password" == "" ]
    then
        ynh_print_info --message="No SFTP password provided, will use current user's password"
    fi
}

ynh_app_config_apply() {
    _ynh_app_config_apply

    if [ "${changed[phpversion]}" == "true" ]
then
    if [ "${old[phpversion]}" != "none" ]
    then
        ynh_app_setting_set --app=$app --key=phpversion --value="${old[phpversion]}"
        ynh_remove_fpm_config
    fi
    ynh_remove_app_dependencies
    YNH_PHP_VERSION=$phpversion
    # ^ ynh_add_config replaces __PHPVERSION__ by __PHP_YNH_VERSION__...
    ynh_app_setting_set --app=$app --key=phpversion --value="$phpversion"

    database=$(ynh_app_setting_get --app=$app --key=database)
    dependencies="$(ynh_read_manifest -k "resources.apt.packages")"
    dependencies_from_raw_bash=$(eval "$(ynh_read_manifest -k "resources.apt.packages_from_raw_bash")" | tr "\n" " ")
    ynh_install_app_dependencies "$dependencies $dependencies_from_raw_bash"

    # Définir le répertoire racine PHP selon le mode d'installation
    install_mode=$(ynh_app_setting_get --app=$app --key=install_mode)
    if [ "$install_mode" == "front_controller_public" ]; then
        # Pour le mode public, PHP_ROOT doit pointer vers /www/public
        php_root="$install_dir/www/public"
    else
        # Pour les autres modes, PHP_ROOT pointe vers /www
        php_root="$install_dir/www"
    fi

    nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
    mkdir -p "$nginx_extra_conf_dir"
    if [ "$phpversion" == "none" ]
    then
        ynh_delete_file_checksum --file="$nginx_extra_conf_dir/php.conf"
        ynh_secure_remove --file="$nginx_extra_conf_dir/php.conf"
    else
        ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
        ynh_add_fpm_config --phpversion=$phpversion
        # ^ the helper takes care of ynh_app_setting_set the phpversion
    fi

    ynh_add_nginx_config
fi

    if [ "${changed[with_sftp]}" == "true" ] && [ $with_sftp -eq 1 ]
    then
        ynh_system_user_add_group --username=$app --groups="sftp.app"

        if [ ! "$password" == "" ]
        then
            chpasswd <<< "${app}:${password}"
        fi
    elif [ "${changed[with_sftp]}" == "true" ] && [ $with_sftp -eq 0 ]
    then
        ynh_system_user_del_group --username=$app --groups="sftp.app"
    fi
    
    if [ "${changed[password]}" == "true" ] && [ ! "$password" == "" ]
    then
        chpasswd <<< "${app}:${password}"
    fi

    if [ "${changed[custom_error_file]}" == "true" ]
    then
        CUSTOM_ERROR_FILE=$custom_error_file
        nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"

        if [ $custom_error_file -eq 1 ]
        then
            ynh_add_config --template="nginx-code-error.conf" --destination="$nginx_extra_conf_dir/error-code.conf"
        elif [ $custom_error_file -eq 0 ]
        then
            ynh_secure_remove --file="$nginx_extra_conf_dir/error-code.conf"
        fi
        ynh_systemd_action --service_name=nginx --action=reload
    fi

    if [ "$phpversion" != "none" ]
then
    ynh_add_fpm_config --phpversion=$phpversion
fi

# Gestion du changement de mode d'installation
if [ "${changed[install_mode]}" == "true" ]
then
    ynh_script_progression --message="Changing installation mode to $install_mode..." --weight=2
    
    # Recréer la configuration NGINX selon le nouveau mode
    nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
    mkdir -p "$nginx_extra_conf_dir"
    
    # Toujours recréer la configuration principale
    ynh_add_nginx_config
    
    # Supprimer l'ancien fichier de réécriture s'il existe
    ynh_secure_remove --file="$nginx_extra_conf_dir/rewrite.conf"
    
    if [ "$install_mode" == "front_controller_public" ]; then
        # Ajouter les règles de réécriture pour le mode public
        ynh_add_config --template="nginx-rewrite-frontcontroller-public.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
        # Créer le répertoire public et l'index
        mkdir -p "$install_dir/www/public"
        ynh_add_config --template="../sources/www/index.php" --destination="$install_dir/www/public/index.php"
        # Permissions spécifiques
        chown -R $app:www-data "$install_dir/www/public"
        mkdir -p "$install_dir/www/storage" "$install_dir/www/bootstrap/cache"
        chown -R $app:www-data "$install_dir/www/storage" "$install_dir/www/bootstrap/cache"
        chmod -R 750 "$install_dir/www/storage" "$install_dir/www/bootstrap/cache"
    elif [ "$install_mode" == "front_controller_www" ]; then
        # Ajouter les règles de réécriture pour le mode www
        ynh_add_config --template="nginx-rewrite-frontcontroller-www.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
        # Créer l'index PHP
        ynh_add_config --template="../sources/www/index.php" --destination="$install_dir/www/index.php"
    else
        # Mode standard - supprimer l'index PHP s'il existe
        ynh_secure_remove --file="$install_dir/www/index.php"
    fi
    
    # Recharger NGINX
    ynh_systemd_action --service_name=nginx --action=reload
fi
}

ynh_app_config_run $1
