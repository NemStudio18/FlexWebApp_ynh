#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

password=$YNH_APP_ARG_PASSWORD
with_sftp=$YNH_APP_ARG_WITH_SFTP
custom_error_file=$YNH_APP_ARG_CUSTOM_ERROR_FILE
database=$YNH_APP_ARG_DATABASE
phpversion=$YNH_APP_ARG_PHPVERSION
rewrite_mode=$YNH_APP_ARG_REWRITE_MODE
app_nb=$YNH_APP_INSTANCE_NUMBER
ssh_port=$(grep "^Port" /etc/ssh/sshd_config | awk '{print $2}')

#=================================================
# SET INSTALLATION DIRECTORY
#=================================================
install_dir="/opt/yunohost/$app"

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

# Set default values if not provided
with_sftp=${with_sftp:-1}
custom_error_file=${custom_error_file:-0}
database=${database:-none}
phpversion=${phpversion:-8.3}
rewrite_mode=${rewrite_mode:-default}

# SFTP password will be set after database creation if needed

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

# Store SFTP settings
ynh_app_setting_set --app=$app --key=with_sftp --value=$with_sftp

#=================================================
# CREATE A MYSQL DATABASE
#=================================================

if [ $database != "none" ]; then
    ynh_script_progression --message="Creating a database..." --weight=2

    db_name=$(ynh_sanitize_dbid --db_name=$app)
    db_user=$db_name
    db_pwd=$(ynh_string_random --length=30)
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd

    if [ $database == "mysql" ]; then
        ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    elif [ $database == "postgresql" ]; then
        ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    fi
    
    # Store database settings for POST_INSTALL
    ynh_app_setting_set --app=$app --key=database --value=$database
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd
fi

#=================================================
# SET SFTP PASSWORD IF NEEDED
#=================================================
# Use MySQL password for SFTP if not provided but SFTP is enabled
if [ $with_sftp -eq 1 ] && [ "$password" = "" ]
then
    if [ "$database" != "none" ]; then
        # Use the MySQL password for SFTP
        password=$db_pwd
        echo "No SFTP password provided, using MySQL password for SFTP access"
    else
        # Generate random password if no database
        password=$(ynh_string_random --length=12)
        echo "No SFTP password provided and no database, generating random password: $password"
        echo "IMPORTANT: Please note this password for SFTP access!"
        
        # Create a password file for easy access
        echo "SFTP Password: $password" > "$install_dir/sftp_password.txt"
        echo "Username: $app" >> "$install_dir/sftp_password.txt"
        echo "Host: $domain" >> "$install_dir/sftp_password.txt"
        echo "Port: 22" >> "$install_dir/sftp_password.txt"
        echo "Directory: $install_dir/www" >> "$install_dir/sftp_password.txt"
        echo "" >> "$install_dir/sftp_password.txt"
        echo "This file contains your SFTP credentials." >> "$install_dir/sftp_password.txt"
        echo "You can delete it after noting the information." >> "$install_dir/sftp_password.txt"
        chmod 600 "$install_dir/sftp_password.txt"
        echo "SFTP credentials saved to: $install_dir/sftp_password.txt"
    fi
fi

# Store the SFTP password (either provided or generated)
ynh_app_setting_set --app=$app --key=PASSWORD --value=$password

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
mkdir -p "$nginx_extra_conf_dir"

# Prepare nginx extra conf
if [ $phpversion != "none" ]
then
    ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
    YNH_PHP_VERSION="$phpversion"
fi

if [ $custom_error_file -eq 1 ]
then
    # Add the custom error build with the application
    ynh_add_config --template="nginx-code-error.conf" --destination="$nginx_extra_conf_dir/error-code.conf"
fi

# Apply the chosen rewrite mode configuration
case $rewrite_mode in
    "front")
        ynh_add_config --template="rewrite-front.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
        ;;
    "framework")
        ynh_add_config --template="rewrite-framework.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
        ;;
    "default"|*)
        ynh_add_config --template="rewrite-default.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
        ;;
esac

# Store the rewrite mode setting
ynh_app_setting_set --app=$app --key=rewrite_mode --value=$rewrite_mode
ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path

# Create a dedicated NGINX config
ynh_add_nginx_config
ynh_add_config --template="example-custom-nginx-config.conf" --destination="$nginx_extra_conf_dir/sample.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

if [ $with_sftp -eq 1 ]
then
    groups="sftp.app"
else
    groups=""
fi

    ynh_system_user_create --username=$app --home_dir="$install_dir" --groups="$groups"

if [ $with_sftp -eq 1 ]
then
    # Add the password to this user
    chpasswd <<< "${app}:${password}"
fi

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

mkdir -p "$install_dir/www"

# Copy the appropriate index files based on SFTP choice
if [ $with_sftp -eq 1 ]
then
    ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
else
    ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
fi

# Copy PHP test files and ads.txt
ynh_add_config --template="../sources/www/index.php" --destination="$install_dir/www/index.php"
ynh_add_config --template="../sources/www/ads.txt" --destination="$install_dir/www/ads.txt"
ynh_add_config --template="../sources/www/get_sftp_credentials.php" --destination="$install_dir/www/get_sftp_credentials.php"

# If framework mode is selected, create the public directory structure
if [ "$rewrite_mode" = "framework" ]
then
    mkdir -p "$install_dir/www/public"
    ynh_add_config --template="../sources/www/public/index.php" --destination="$install_dir/www/public/index.php"
fi

chown -R $app:www-data "$install_dir"
# Home directory of the user needs to be owned by root to allow
# SFTP connections
chown root:root "$install_dir"
setfacl -m g:$app:r-x "$install_dir"
setfacl -m g:www-data:r-x "$install_dir"
chmod 750 "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

if [ $phpversion != "none" ]
then
    ynh_script_progression --message="Configuring PHP-FPM..." --weight=2

    # Create a dedicatedPHP-FPM config
    ynh_add_fpm_config
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
