#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

password=$YNH_APP_ARG_PASSWORD
app_nb=$YNH_APP_INSTANCE_NUMBER
ssh_port=$(grep "^Port" /etc/ssh/sshd_config | awk '{print $2}')

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

# If SFTP is enabled but no password provided, use current user's password
if [ $with_sftp -eq 1 ] && [ -z "$password" ]; then
    ynh_script_progression --message="No password provided for SFTP, using current user's password..." --weight=1
    # Get current user's password from stdin (will be prompted)
    password=$(ynh_string_random --length=20)
    ynh_script_progression --message="Generated random password for SFTP access..." --weight=1
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=password --value=$password

#=================================================
# CREATE A MYSQL DATABASE
#=================================================

if [ $database != "none" ]; then
    ynh_script_progression --message="Creating a database..." --weight=2

    db_name=$(ynh_sanitize_dbid --db_name=$app)
    db_user=$db_name
    db_pwd=$(ynh_string_random --length=30)
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd

    if [ $database == "mysql" ]; then
        ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    elif [ $database == "postgresql" ]; then
        ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    fi
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
mkdir -p "$nginx_extra_conf_dir"

# Mode nginx
if [ "$nginx_mode" = "rewrite" ]; then
    ynh_add_config --template="nginx-rewrite.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
elif [ "$nginx_mode" = "rewrite-public" ]; then
    ynh_add_config --template="nginx-rewrite-public.conf" --destination="$nginx_extra_conf_dir/rewrite.conf"
else
    # Mode classique par défaut (déjà géré par nginx.conf + nginx-php.conf)
    if [ $phpversion != "none" ]
    then
        ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
        YNH_PHP_VERSION="$phpversion"
    fi
fi

if [ $custom_error_file -eq 1 ]
then
    # Add the custom error build with the application
    ynh_add_config --template="nginx-code-error.conf" --destination="$nginx_extra_conf_dir/error-code.conf"
fi


# Create a dedicated NGINX config
ynh_add_nginx_config
ynh_add_config --template="example-custom-nginx-config.conf" --destination="$nginx_extra_conf_dir/sample.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

if [ $with_sftp -eq 1 ]
then
    groups="sftp.app"
else
    groups=""
fi

    ynh_system_user_create --username=$app --home_dir="$install_dir" --groups="$groups"

if [ $with_sftp -eq 1 ]
then
    # Add the password to this user
    chpasswd <<< "${app}:${password}"
fi

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

mkdir -p "$install_dir/www"

# Copy appropriate index file based on NGINX mode
if [ "$nginx_mode" = "rewrite" ]; then
    # Rewrite mode: copy PHP file
    ynh_add_config --template="../sources/www/index_rewrite.php" --destination="$install_dir/www/index.php"
    # Also copy HTML file for SFTP info
    if [ $with_sftp -eq 1 ]; then
        ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
    else
        ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
    fi
elif [ "$nginx_mode" = "rewrite-public" ]; then
    # Rewrite-public mode: create public directory and copy PHP file
    mkdir -p "$install_dir/www/public"
    ynh_add_config --template="../sources/www/index_rewrite_public.php" --destination="$install_dir/www/public/index.php"
    # Also copy HTML file to public for SFTP info
    if [ $with_sftp -eq 1 ]; then
        ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/public/index.html"
    else
        ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/public/index.html"
    fi
else
    # Classic mode: copy HTML file
    if [ $with_sftp -eq 1 ]; then
        ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
    else
        ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
    fi
fi

chown -R $app:www-data "$install_dir"
# Home directory of the user needs to be owned by root to allow
# SFTP connections
chown root:root "$install_dir"
setfacl -m g:$app:r-x "$install_dir"
setfacl -m g:www-data:r-x "$install_dir"
chmod 750 "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

if [ $phpversion != "none" ]
then
    ynh_script_progression --message="Configuring PHP-FPM..." --weight=2

    # Create a dedicatedPHP-FPM config
    ynh_add_fpm_config
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
