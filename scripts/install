#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

password=$YNH_APP_ARG_PASSWORD
app_nb=$YNH_APP_INSTANCE_NUMBER
ssh_port=$(grep "^Port" /etc/ssh/sshd_config | awk '{print $2}')

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

[ $with_sftp -eq 0 ] || [ "$password" != "" ] || ynh_die --message="You need to set a password to enable SFTP"

# Validate mode requirements
if [ "$mode" == "front-controller" ] || [ "$mode" == "framework" ]; then
    if [ "$phpversion" == "none" ]; then
        ynh_die --message="PHP is required for $mode mode. Please select a PHP version."
    fi
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=password --value=$password

#=================================================
# CREATE A MYSQL DATABASE
#=================================================

if [ $database != "none" ]; then
    ynh_script_progression --message="Creating a database..." --weight=2

    db_name=$(ynh_sanitize_dbid --db_name=$app)
    db_user=$db_name
    db_pwd=$(ynh_string_random --length=30)
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd

    if [ $database == "mysql" ]; then
        ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    elif [ $database == "postgresql" ]; then
        ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    fi
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
mkdir -p "$nginx_extra_conf_dir"

# Prepare nginx extra conf
if [ $phpversion != "none" ]
then
    ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
    YNH_PHP_VERSION="$phpversion"
fi

if [ $custom_error_file -eq 1 ]
then
    # Add the custom error build with the application
    ynh_add_config --template="nginx-code-error.conf" --destination="$nginx_extra_conf_dir/error-code.conf"
fi


# Create a dedicated NGINX config based on mode
if [ "$mode" == "static" ]; then
    ynh_add_nginx_config
elif [ "$mode" == "front-controller" ]; then
    ynh_add_nginx_config --template="nginx-front-controller.conf"
elif [ "$mode" == "framework" ]; then
    ynh_add_nginx_config --template="nginx-framework.conf"
else
    # Default to static mode
    ynh_add_nginx_config
fi

# Ensure only the correct template is used and clean up any unwanted templates
# Remove any other main templates that might have been copied
if [ "$mode" != "static" ]; then
    # Remove nginx.conf if it was copied (should not happen, but safety check)
    ynh_secure_remove --file="$nginx_extra_conf_dir/nginx.conf"
fi

if [ "$mode" != "front-controller" ]; then
    # Remove nginx-front-controller.conf if it was copied
    ynh_secure_remove --file="$nginx_extra_conf_dir/nginx-front-controller.conf"
fi

if [ "$mode" != "framework" ]; then
    # Remove nginx-framework.conf if it was copied
    ynh_secure_remove --file="$nginx_extra_conf_dir/nginx-framework.conf"
fi

ynh_add_config --template="example-custom-nginx-config.conf" --destination="$nginx_extra_conf_dir/sample.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

if [ $with_sftp -eq 1 ]
then
    groups="sftp.app"
else
    groups=""
fi

    ynh_system_user_create --username=$app --home_dir="$install_dir" --groups="$groups"

if [ $with_sftp -eq 1 ]
then
    # Add the password to this user
    chpasswd <<< "${app}:${password}"
fi

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

mkdir -p "$install_dir/www"

# Create structure based on mode
if [ "$mode" == "static" ]; then
    # Static mode - use original files
    if [ $with_sftp -eq 1 ]
    then
        ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
    else
        ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
    fi
elif [ "$mode" == "front-controller" ]; then
    # Front controller mode - create index.php and structure
    ynh_add_config --template="../sources/www/index.php" --destination="$install_dir/www/index.php"
    mkdir -p "$install_dir/www/config"
    mkdir -p "$install_dir/www/src"
    mkdir -p "$install_dir/www/app"
elif [ "$mode" == "framework" ]; then
    # Framework mode - create public structure
    mkdir -p "$install_dir/www/public"
    ynh_add_config --template="../sources/www/public/index.php" --destination="$install_dir/www/public/index.php"
    mkdir -p "$install_dir/www/app"
    mkdir -p "$install_dir/www/config"
    mkdir -p "$install_dir/www/src"
    mkdir -p "$install_dir/www/vendor"
    mkdir -p "$install_dir/www/storage"
else
    # Default to static mode
    if [ $with_sftp -eq 1 ]
    then
        ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
    else
        ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
    fi
fi

chown -R $app:www-data "$install_dir"
# Home directory of the user needs to be owned by root to allow
# SFTP connections
chown root:root "$install_dir"
setfacl -m g:$app:r-x "$install_dir"
setfacl -m g:www-data:r-x "$install_dir"
chmod 750 "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

if [ $phpversion != "none" ]
then
    ynh_script_progression --message="Configuring PHP-FPM..." --weight=2

    # Create a dedicatedPHP-FPM config
    ynh_add_fpm_config
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
