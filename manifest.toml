packaging_format = 2

id = "my_webapp"
name = "My Webapp"
description.en = "Custom Web app with SFTP access to serve static (HTML, CSS, JS) and PHP files"
description.fr = "Application Web personnalisée avec accès SFTP pour servir des fichiers statiques (HTML, CSS, JS) et PHP"

version = "1.0~ynh21"

maintainers = []

[upstream]
license = "GPL-3.0-only"

[integration]
yunohost = ">= 11.2.4"
architectures = "all"
multi_instance = true
ldap = "not_relevant"
sso = "not_relevant"
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    type = "domain"

    [install.path]
    type = "path"
    default = "/site"

    [install.with_sftp]
    ask.en = "Do you need a SFTP access?"
    ask.fr = "Avez-vous besoin d'un accès SFTP ?"
    type = "boolean"
    default = true

    [install.password]
    type = "password"
    optional = true
    help.en = "Optional: SFTP password. If empty and SFTP enabled, will use your current user password"
    help.fr = "Optionnel: Mot de passe SFTP. Si vide et SFTP activé, utilisera votre mot de passe utilisateur actuel"

    [install.init_main_permission]
    type = "group"
    default = "visitors"

    [install.phpversion]
    ask.en = "Choose a PHP version you want to use for your app"
    ask.fr = "Choisissez une version PHP que vous souhaitez utiliser pour votre application"
    type = "select"
    choices = ["none", "7.4", "8.0", "8.1", "8.2", "8.3", "8.4"]
    default = "8.4"

    [install.database]
    ask.en = "Do you need a database?"
    ask.fr = "Avez-vous besoin d'une base de données ?"
    type = "select"
    choices = [ "none", "mysql", "postgresql" ]
    default = "none"

    [install.custom_error_file]
    ask.en = "Activate the custom error file use"
    ask.fr = "Activer l'utilisation du fichier d'erreur personnalisé"
    type = "boolean"
    default = false
    help = "Once custom error enabled, you can add/create a custom `404.html` file in a directory `www/error`."

    [install.mode]
    ask.en = "Choose the application mode"
    ask.fr = "Choisissez le mode de l'application"
    type = "select"
    choices = ["classic", "cms", "cms-public"]
    default = "classic"
    help.en = "Classic: Standard static files + PHP. CMS: Front controller for WordPress/Drupal. CMS-Public: Front controller with index.php in /public folder (Laravel/Symfony)."
    help.fr = "Classic: Fichiers statiques + PHP standard. CMS: Front controller pour WordPress/Drupal. CMS-Public: Front controller avec index.php dans le dossier /public (Laravel/Symfony)."

[resources]
    [resources.system_user]

    [resources.install_dir]

    [resources.permissions]
    main.url = "/"

[documentation]
    [documentation.overview]
    en = "My Webapp is a flexible web application platform with three deployment modes: Classic (static files), CMS (WordPress/Drupal), and CMS-Public (Laravel/Symfony)."
    fr = "My Webapp est une plateforme d'application web flexible avec trois modes de déploiement : Classic (fichiers statiques), CMS (WordPress/Drupal), et CMS-Public (Laravel/Symfony)."

    [documentation.quick_start]
    en = "QUICK_START.md"
    fr = "QUICK_START.md"

    [documentation.examples]
    en = "EXAMPLES.md"
    fr = "EXAMPLES.md"

    [documentation.admin]
    en = "ADMIN.md"
    fr = "ADMIN_fr.md"

    [documentation.post_install]
    en = "POST_INSTALL.md"
    fr = "POST_INSTALL_fr.md"

    [documentation.icons]
    en = "ICONS.md"
    fr = "ICONS.md"

    [documentation.test]
    en = "TEST_ACCESS.md"
    fr = "TEST_ACCESS.md"

    [documentation.readme]
    en = "README.md"
    fr = "README.md"

    [resources.apt]
    packages = "nginx"  # Kind of "dummy" value to be sure to have a non-empty dep list
    packages_from_raw_bash = """
        if [[ "$database" == "mysql" ]]; then
            echo "mariadb-server"

            if [[ "$phpversion" != none ]]; then
                echo "php${phpversion}-mysql"
            fi
        elif [[ "$database" == "postgresql" ]]; then
            echo "postgresql postgresql-contrib"

            if [[ "$phpversion" != none ]]; then
                echo "php${phpversion}-pgsql"
            fi
        fi

        if [[ "$phpversion" != none ]]; then
            echo "php${phpversion}-fpm"
        fi
    """
